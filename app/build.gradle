plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.bluemoon.configPlugin'
}

import com.bluemoon.configplugin.*
android {
    compileSdk 32

    defaultConfig {
        applicationId "com.bluemoon.gradledemo"
        minSdk BuildVersions.minSdkVersion
        targetSdk  BuildVersions.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

//    implementation project(':myplugin')
    implementation files('libs/openDefault-4.2.7.aar')
    printf(">>>CHEN>>>"+Deps.glide_loader_okhttp3)
}
if (ASM_ENABLE.toBoolean()) {
    apply plugin: 'com.bluemoon.plugin'
    useAsm {
        useAsmToApplication true
        configService {
            uploadToService = true
            serviceAddress = "https://www.bluemoon.test.api"
        }
    }

    envConfig {
        services {
            release {
                url = "https://www.bluemoon.release.api"
            }
            debug {
                url = "https://www.bluemoon.debug.api"
            }
            dev {
                url = "https://www.bluemoon.dev.api"
            }
        }
    }
}
if (DETECT_ENABLE.toBoolean()) {
    apply plugin: 'com.bluemoon.detect64so'
    Detect64soPlugin {
        enableDetect = true
    }
}
if (PRIVACY_DETECT_ENABLE.toBoolean()) {
    apply plugin: 'com.bluemoon.privacyagreement'
    privacyDetect {
        enableDetect = true
        methodOwner = "com.bluemoon.gradledemo.PrivacyAgreementRecord"
        methodName = "writeToFile"
    }
}

if (DETECT_BIGIMAGE_ENABLE.toBoolean()) {
    apply plugin: 'detectBigImage'
    DetectBigImagePlugin {
        enableBigImageDetect = true
        monitorImageViewClass = "com.bluemoon.gradledemo.view.MonitorImageView"
    }

}
